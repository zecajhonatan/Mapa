<!DOCTYPE html>
<html>

<head>
  <meta name="viewport" content="width=device-width,initial-scale=1.0">
  <title>Socket.IO chat</title>
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
    integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
  <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
    integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
</head>

<body>

  <div id="map" style="width: 100%; height: 100vh;"></div>

  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();

    let map

    // rederiza o mapa
    if (map === undefined) {
      map = L.map('map').setView([-15.8013291, -47.9513762], 13);
    } else {
      map.remove()
      map = L.map('map').setView([-15.8013291, -47.9513762], 13);
    }
    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    socket.on('updateLocation', (dado) => {
      console.log(dado);

      // Remove todos os marcadores existentes do mapa
      map.eachLayer(layer => {
        if (layer instanceof L.Marker) {
          map.removeLayer(layer);
        }
      });

      // Adiciona marcadores para cada localização recebida do servidor
      Object.values(dado).forEach(location => {
        const marker = L.marker([location.latitude, location.longitude]).addTo(map);
      });
    })

    // enviando os dados de latitude - longitude para o back-end-servidor
      navigator.geolocation.watchPosition((geolication) => {
        const { latitude, longitude } = geolication.coords;
        socket.emit('updateLocation', { latitude, longitude });
      })

  </script>
</body>

</html>